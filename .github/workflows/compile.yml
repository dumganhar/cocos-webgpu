name: Compile Emscripten Library

on:
  workflow_dispatch:
    inputs:
      engine_ref:
        description: 'cocos-engine branch'
        type: string
        default: 'develop'
        required: true
  release:
    types: [published]

# github.head_ref is only defined on pull_request events
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  compile:
    name: "Emscripten"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - uses: actions/checkout@v3

      - name: Release check cocos branch
        if: github.event_name == 'release'
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import os
            import re
            import sys
            pattern = r'[R|r]elease:*\s*([^\s-]+)'
            result=re.findall(pattern, "${{ github.event.release.name }}")
            if len(result) < 1:
                sys.exit(-1)
            print("Ref: " + result[0])
            env_file = os.getenv('GITHUB_ENV')
            with open(env_file, "a") as f:
                f.write("COCOS_ENGINE_REF=" + result[0] + "\n")

      - name: Check cocos branch for workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "COCOS_ENGINE_REF=${{ github.event.inputs.engine_ref }}" >> $GITHUB_ENV

      - name: Print env
        run: |
          echo "${{ env.COCOS_ENGINE_REF }}"

      - name: Checkout cocos-engine repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ env.COCOS_ENGINE_REF }}
          repository: cocos/cocos-engine
          path: cocos-engine

      - name: Download external libraries
        shell: bash
        run: |
          EXT_VERSION=`node ./cocos-engine/.github/workflows/get-native-external-version.js`
          git clone --branch $EXT_VERSION --depth 1 https://github.com/cocos/cocos-engine-external ./cocos-engine/native/external

      - name: Setup emsdk
        uses: dumganhar/setup-emsdk@997d2cde2deabda085a11f98e86e842915b0e846
        with:
          version: 3.1.45
          actions-cache-folder: 'emsdk-cache'

      - name: Verify
        run: |
          which emcc
          emcc -v

      - name: Install ninja
        run: |
          if ! command -v ninja &> /dev/null; then
              echo "Ninja not found, installing..."
              # sudo apt update
              sudo apt install ninja-build
          else
              echo "Ninja is already installed."
          fi
          which ninja

      - name: Compile
        run: |
          NATIVE_ROOT=$GITHUB_WORKSPACE/cocos-engine/native
          cd $NATIVE_ROOT/cocos/renderer/gfx-wgpu
          mkdir build
          cd build
          emcmake cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release
          ninja
          echo "============== Compile WGPU by ems on Ubuntu Done! =============="

